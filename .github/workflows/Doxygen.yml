# This is a basic workflow make doxygen documentation every time develop is updated

name: Doxygen

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Doxygen"
  
  
  Sphinx:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    container:
      image: ghcr.io/mach3-software/mach3:alma9latest
      
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Check Python 
        run: python3 --version

      - name: Build MaCh3
        run: | 
          mkdir build
          cd build 
          cmake -DMaCh3_PYTHON_ENABLED=ON ../
          make 
          make install
          
      - name: Set up MaCh3
        run: source build/bin/setup.MaCh3.sh

      ## EM: Now generate the sphinx documentation
      - name: Sphinx Build    
        working-directory: Doc/sphinx
        run: | 
          python3 -m venv sphinx_env 
          source sphinx_env/bin/activate 
          pip install -r requirements.txt 
          make html
      
      #- name: Download Doxygen Artifact
      #  uses: actions/download-artifact@master
      #  with:
      #    name: DoxygenHTML
      #    location: to-upload/html
          
      ## EM: Move the generated sphinx docs into the final html folder
      - name: Move Sphinx Docs
        run: |
          ls Doc
          ls Doc/sphinx
          mkdir to-upload
          mkdir to-upload/html/pyMaCh3
          mv Doc/sphinx/build/html/* to-upload/html/pyMaCh3/
          
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: DocumentationHTML
          path: to-upload/html

  #Deploy:
  #  runs-on: ubuntu-latest
  #  needs: [Doxygen, Sphinx]
        
      # Deploys the generated documentation to GitHub Pages
      #- name: Deploy
      #  uses: peaceiris/actions-gh-pages@v4
      #  with:
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    publish_dir: ./to-upload/html
